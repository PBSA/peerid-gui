# gitlab scanning
include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Management.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml

variables:
 SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
 GIT_DEPTH: $GIT_DEPTH  # Tells git to fetch all the branches of the project, required by the analysis task
 DAST_FULL_SCAN_ENABLED: $FULL_SCAN_ENABLED
 DAST_WEBSITE: $WEBSITE
 DAST_AUTH_URL: $AUTH_URL
 DAST_USERNAME_FIELD: $USERNAME_FIELD
 DAST_PASSWORD_FIELD: $PASSWORD_FIELD
 DAST_SUBMIT_FIELD: $SUBMIT_FIELD

retire-js-dependency_scanning:
  before_script:
    - apk add autoconf libtool automake build-base gcc

dast:
  before_script:
    - echo "$WEBSITE" > environment_url.txt

# node docker image on which this would be run
image: node:12.18.4

stages:
  - test
  - deployDev
  - dast

# builds app
build:
  stage: test
  script:
    - npm install
    
  tags:
    - docker

deploy:
  stage: deployDev
  script:
    - deploy_peerid
  tags:
    - peerid-runner
  only:
    refs:
      - feature/New-UI
      
sonarcloud-check:
 image:
   name: sonarsource/sonar-scanner-cli:latest
   entrypoint: [""]
 cache:
   key: "${CI_JOB_NAME}"
   paths:
     - .sonar/cache
 script:
   - sonar-scanner
 when: manual
